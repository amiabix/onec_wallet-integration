{"ast":null,"code":"import { createElement } from 'react-native-web';\nimport { resolve } from './lib/resolve';\nimport { Component } from 'react';\n/**\n * `react-native-svg` supports additional props that aren't defined in the spec.\n * This function replaces them in a spec conforming manner.\n *\n * @param {Object} props Properties given to us.\n * @returns {Object} Cleaned object.\n * @private\n */\n\nfunction prepare(props) {\n  const {\n    translate,\n    scale,\n    rotation,\n    skewX,\n    skewY,\n    originX,\n    originY,\n    fontFamily,\n    fontSize,\n    fontWeight,\n    fontStyle,\n    style,\n    ...clean\n  } = props;\n  const transform = [];\n\n  if (originX != null || originY != null) {\n    transform.push(`translate(${originX || 0}, ${originY || 0})`);\n  }\n\n  if (translate != null) {\n    transform.push(`translate(${translate})`);\n  }\n\n  if (scale != null) {\n    transform.push(`scale(${scale})`);\n  } // rotation maps to rotate, not to collide with the text rotate attribute (which acts per glyph rather than block)\n\n\n  if (rotation != null) {\n    transform.push(`rotate(${rotation})`);\n  }\n\n  if (skewX != null) {\n    transform.push(`skewX(${skewX})`);\n  }\n\n  if (skewY != null) {\n    transform.push(`skewY(${skewY})`);\n  }\n\n  if (originX != null || originY != null) {\n    transform.push(`translate(${-originX || 0}, ${-originY || 0})`);\n  }\n\n  if (transform.length) {\n    clean.transform = transform.join(' ');\n  }\n\n  const styles = {};\n\n  if (fontFamily != null) {\n    styles.fontFamily = fontFamily;\n  }\n\n  if (fontSize != null) {\n    styles.fontSize = fontSize;\n  }\n\n  if (fontWeight != null) {\n    styles.fontWeight = fontWeight;\n  }\n\n  if (fontStyle != null) {\n    styles.fontStyle = fontStyle;\n  }\n\n  clean.style = resolve(style, styles);\n  return clean;\n}\n\nexport class Circle extends Component {\n  render() {\n    return createElement('circle', prepare(this.props));\n  }\n\n}\nexport class ClipPath extends Component {\n  render() {\n    return createElement('clipPath', prepare(this.props));\n  }\n\n}\nexport class Defs extends Component {\n  render() {\n    return createElement('defs', prepare(this.props));\n  }\n\n}\nexport class Ellipse extends Component {\n  render() {\n    return createElement('ellipse', prepare(this.props));\n  }\n\n}\nexport class G extends Component {\n  render() {\n    const {\n      x,\n      y,\n      ...rest\n    } = this.props;\n\n    if ((x || y) && !rest.translate) {\n      rest.translate = `${x || 0}, ${y || 0}`;\n    }\n\n    return createElement('g', prepare(rest));\n  }\n\n}\nexport class Image extends Component {\n  render() {\n    return createElement('image', prepare(this.props));\n  }\n\n}\nexport class Line extends Component {\n  render() {\n    return createElement('line', prepare(this.props));\n  }\n\n}\nexport class LinearGradient extends Component {\n  render() {\n    return createElement('linearGradient', prepare(this.props));\n  }\n\n}\nexport class Path extends Component {\n  render() {\n    return createElement('path', prepare(this.props));\n  }\n\n}\nexport class Polygon extends Component {\n  render() {\n    return createElement('polygon', prepare(this.props));\n  }\n\n}\nexport class Polyline extends Component {\n  render() {\n    return createElement('polyline', prepare(this.props));\n  }\n\n}\nexport class RadialGradient extends Component {\n  render() {\n    return createElement('radialGradient', prepare(this.props));\n  }\n\n}\nexport class Rect extends Component {\n  render() {\n    return createElement('rect', prepare(this.props));\n  }\n\n}\nexport class Stop extends Component {\n  render() {\n    return createElement('stop', prepare(this.props));\n  }\n\n}\nexport class Svg extends Component {\n  render() {\n    return createElement('svg', prepare(this.props));\n  }\n\n}\nexport class Symbol extends Component {\n  render() {\n    return createElement('symbol', prepare(this.props));\n  }\n\n}\nexport class Text extends Component {\n  render() {\n    return createElement('text', prepare(this.props));\n  }\n\n}\nexport class TSpan extends Component {\n  render() {\n    return createElement('tspan', prepare(this.props));\n  }\n\n}\nexport class TextPath extends Component {\n  render() {\n    return createElement('textPath', prepare(this.props));\n  }\n\n}\nexport class Use extends Component {\n  render() {\n    return createElement('use', prepare(this.props));\n  }\n\n}\nexport class Mask extends Component {\n  render() {\n    return createElement('mask', prepare(this.props));\n  }\n\n}\nexport class Pattern extends Component {\n  render() {\n    return createElement('pattern', prepare(this.props));\n  }\n\n}\nexport default Svg;","map":{"version":3,"sources":["/Users/ayushbhadauria/Desktop/onec-react-boilerplate/node_modules/react-native-svg/index.web.js"],"names":["createElement","resolve","Component","prepare","props","translate","scale","rotation","skewX","skewY","originX","originY","fontFamily","fontSize","fontWeight","fontStyle","style","clean","transform","push","length","join","styles","Circle","render","ClipPath","Defs","Ellipse","G","x","y","rest","Image","Line","LinearGradient","Path","Polygon","Polyline","RadialGradient","Rect","Stop","Svg","Symbol","Text","TSpan","TextPath","Use","Mask","Pattern"],"mappings":"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","sourcesContent":["import { createElement } from 'react-native-web';\nimport { resolve } from './lib/resolve';\nimport { Component } from 'react';\n\n/**\n * `react-native-svg` supports additional props that aren't defined in the spec.\n * This function replaces them in a spec conforming manner.\n *\n * @param {Object} props Properties given to us.\n * @returns {Object} Cleaned object.\n * @private\n */\nfunction prepare(props) {\n  const {\n    translate,\n    scale,\n    rotation,\n    skewX,\n    skewY,\n    originX,\n    originY,\n    fontFamily,\n    fontSize,\n    fontWeight,\n    fontStyle,\n    style,\n    ...clean\n  } = props;\n\n  const transform = [];\n\n  if (originX != null || originY != null) {\n    transform.push(`translate(${originX || 0}, ${originY || 0})`);\n  }\n  if (translate != null) {\n    transform.push(`translate(${translate})`);\n  }\n  if (scale != null) {\n    transform.push(`scale(${scale})`);\n  }\n  // rotation maps to rotate, not to collide with the text rotate attribute (which acts per glyph rather than block)\n  if (rotation != null) {\n    transform.push(`rotate(${rotation})`);\n  }\n  if (skewX != null) {\n    transform.push(`skewX(${skewX})`);\n  }\n  if (skewY != null) {\n    transform.push(`skewY(${skewY})`);\n  }\n  if (originX != null || originY != null) {\n    transform.push(`translate(${-originX || 0}, ${-originY || 0})`);\n  }\n\n  if (transform.length) {\n    clean.transform = transform.join(' ');\n  }\n\n  const styles = {};\n\n  if (fontFamily != null) {\n    styles.fontFamily = fontFamily;\n  }\n  if (fontSize != null) {\n    styles.fontSize = fontSize;\n  }\n  if (fontWeight != null) {\n    styles.fontWeight = fontWeight;\n  }\n  if (fontStyle != null) {\n    styles.fontStyle = fontStyle;\n  }\n\n  clean.style = resolve(style, styles);\n\n  return clean;\n}\n\nexport class Circle extends Component {\n  render() {\n    return createElement('circle', prepare(this.props));\n  }\n}\n\nexport class ClipPath extends Component {\n  render() {\n    return createElement('clipPath', prepare(this.props));\n  }\n}\n\nexport class Defs extends Component {\n  render() {\n    return createElement('defs', prepare(this.props));\n  }\n}\n\nexport class Ellipse extends Component {\n  render() {\n    return createElement('ellipse', prepare(this.props));\n  }\n}\n\nexport class G extends Component {\n  render() {\n    const { x, y, ...rest } = this.props;\n\n    if ((x || y) && !rest.translate) {\n      rest.translate = `${x || 0}, ${y || 0}`;\n    }\n\n    return createElement('g', prepare(rest));\n  }\n}\n\nexport class Image extends Component {\n  render() {\n    return createElement('image', prepare(this.props));\n  }\n}\n\nexport class Line extends Component {\n  render() {\n    return createElement('line', prepare(this.props));\n  }\n}\n\nexport class LinearGradient extends Component {\n  render() {\n    return createElement('linearGradient', prepare(this.props));\n  }\n}\n\nexport class Path extends Component {\n  render() {\n    return createElement('path', prepare(this.props));\n  }\n}\n\nexport class Polygon extends Component {\n  render() {\n    return createElement('polygon', prepare(this.props));\n  }\n}\n\nexport class Polyline extends Component {\n  render() {\n    return createElement('polyline', prepare(this.props));\n  }\n}\n\nexport class RadialGradient extends Component {\n  render() {\n    return createElement('radialGradient', prepare(this.props));\n  }\n}\n\nexport class Rect extends Component {\n  render() {\n    return createElement('rect', prepare(this.props));\n  }\n}\n\nexport class Stop extends Component {\n  render() {\n    return createElement('stop', prepare(this.props));\n  }\n}\n\nexport class Svg extends Component {\n  render() {\n    return createElement('svg', prepare(this.props));\n  }\n}\n\nexport class Symbol extends Component {\n  render() {\n    return createElement('symbol', prepare(this.props));\n  }\n}\n\nexport class Text extends Component {\n  render() {\n    return createElement('text', prepare(this.props));\n  }\n}\n\nexport class TSpan extends Component {\n  render() {\n    return createElement('tspan', prepare(this.props));\n  }\n}\n\nexport class TextPath extends Component {\n  render() {\n    return createElement('textPath', prepare(this.props));\n  }\n}\n\nexport class Use extends Component {\n  render() {\n    return createElement('use', prepare(this.props));\n  }\n}\n\nexport class Mask extends Component {\n  render() {\n    return createElement('mask', prepare(this.props));\n  }\n}\n\nexport class Pattern extends Component {\n  render() {\n    return createElement('pattern', prepare(this.props));\n  }\n}\n\nexport default Svg;\n"]},"metadata":{},"sourceType":"module"}