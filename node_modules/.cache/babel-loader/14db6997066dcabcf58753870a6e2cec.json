{"ast":null,"code":"import * as React from 'react';\nimport { Animated, FlatList, Linking, Platform, StyleSheet, TouchableOpacity, useWindowDimensions, View } from 'react-native';\nimport Qrcode from './Qrcode';\nimport WalletConnectLogo from './WalletConnectLogo';\nimport WalletServiceRow from './WalletServiceRow';\nconst styles = StyleSheet.create({\n  absolute: {\n    position: 'absolute'\n  },\n  black: {\n    backgroundColor: 'black'\n  },\n  center: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  flex: {\n    flex: 1\n  },\n  fullWidth: {\n    width: '100%'\n  },\n  noOverflow: {\n    overflow: 'hidden'\n  },\n  row: {\n    alignItems: 'center',\n    flexDirection: 'row'\n  }\n});\nconst useNativeDriver = Platform.OS !== 'web';\nexport default function QrcodeModal(_ref) {\n  let {\n    visible,\n    walletServices,\n    connectToWalletService,\n    uri,\n    onDismiss,\n    division\n  } = _ref;\n  const shouldConnectToWalletService = React.useCallback(walletService => connectToWalletService(walletService, uri), [connectToWalletService, uri]);\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  const {\n    opacity,\n    logo,\n    icons\n  } = React.useMemo(() => ({\n    opacity: new Animated.Value(0),\n    logo: new Animated.Value(0),\n    icons: new Animated.Value(0)\n  }), []);\n  const walletServiceRows = React.useMemo(() => {\n    return [...Array(Math.ceil(walletServices.length / division))].map((_, i) => walletServices.slice(i * division, i * division + division));\n  }, [walletServices, division]);\n  const modalHeight = height * 0.4;\n  const modalWidth = modalHeight * 0.9;\n  const shouldAnimate = React.useCallback((totalDuration, direction) => {\n    const sequence = [Animated.timing(opacity, {\n      toValue: direction ? 1 : 0,\n      duration: totalDuration * 0.5,\n      useNativeDriver\n    }), Animated.delay(direction ? 0 : totalDuration * 0.4), Animated.parallel([Animated.sequence([Animated.delay(totalDuration * (direction ? 0.2 : 0)), Animated.timing(icons, {\n      toValue: direction ? 1 : 0,\n      duration: totalDuration * (direction ? 0.3 : 0.5),\n      useNativeDriver\n    })]), Animated.timing(logo, {\n      toValue: direction ? 1 : 0,\n      duration: totalDuration * 0.5,\n      useNativeDriver\n    })])];\n\n    if (!direction) {\n      sequence.reverse();\n    }\n\n    Animated.sequence(sequence).start();\n  }, [opacity, logo, icons, division]);\n  React.useEffect(() => {\n    shouldAnimate(visible ? 600 : 600, visible);\n  }, [shouldAnimate, visible]);\n  const onPressLogo = React.useCallback(async () => {\n    const url = 'https://walletconnect.org/';\n    return (await Linking.canOpenURL(url)) && Linking.openURL(url);\n  }, []);\n  const keyExtractor = React.useCallback(walletServiceRow => {\n    return `k${walletServiceRows.indexOf(walletServiceRow)}`;\n  }, [walletServiceRows]);\n  const renderItem = React.useCallback(_ref2 => {\n    let {\n      item,\n      index\n    } = _ref2;\n    return React.createElement(WalletServiceRow, {\n      key: `k${index}`,\n      style: {\n        opacity: icons\n      },\n      division: division,\n      walletServices: item,\n      width: modalWidth,\n      height: modalHeight * 0.25,\n      connectToWalletService: shouldConnectToWalletService\n    });\n  }, [modalWidth, modalHeight, division, icons, shouldConnectToWalletService]);\n  const shouldRenderQrcode = Platform.OS === 'web';\n  return React.createElement(Animated.View, {\n    style: [styles.absolute, styles.noOverflow, {\n      width,\n      height,\n      opacity\n    }],\n    pointerEvents: visible ? 'box-none' : 'none'\n  }, React.createElement(View, {\n    style: StyleSheet.absoluteFill\n  }, React.createElement(TouchableOpacity, {\n    style: StyleSheet.absoluteFill,\n    onPress: onDismiss,\n    activeOpacity: 0.98\n  }, React.createElement(Animated.View, {\n    style: [styles.flex, {\n      opacity: Animated.multiply(opacity, 0.95)\n    }, styles.black]\n  }))), React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.center],\n    pointerEvents: \"box-none\"\n  }, React.createElement(Animated.View, {\n    pointerEvents: visible ? 'box-none' : 'none',\n    style: {\n      width: modalWidth,\n      transform: [{\n        translateY: Animated.multiply(modalHeight * (shouldRenderQrcode ? 0.5 : 0.6), logo)\n      }, {\n        scale: Animated.add(1, Animated.multiply(logo, -0.2))\n      }]\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: onPressLogo\n  }, React.createElement(WalletConnectLogo, {\n    width: modalWidth\n  })))), React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.center],\n    pointerEvents: visible ? 'box-none' : 'none'\n  }, React.createElement(Animated.View, {\n    style: {\n      width: modalWidth,\n      height: modalHeight\n    }\n  }, shouldRenderQrcode ? React.createElement(Animated.View, {\n    style: [StyleSheet.absoluteFill, styles.center, {\n      opacity: icons,\n      transform: [{\n        scale: icons\n      }]\n    }]\n  }, React.createElement(Qrcode, {\n    uri: uri,\n    size: modalHeight * 0.8\n  })) : React.createElement(FlatList, {\n    scrollEnabled: visible,\n    showsVerticalScrollIndicator: visible,\n    keyExtractor: keyExtractor,\n    style: styles.flex,\n    data: walletServiceRows,\n    renderItem: renderItem\n  }))));\n}","map":{"version":3,"sources":["/Users/ayushbhadauria/Desktop/onec-react-boilerplate/node_modules/@walletconnect/react-native-dapp/dist/components/QrcodeModal.js"],"names":["React","Animated","FlatList","Linking","Platform","StyleSheet","TouchableOpacity","useWindowDimensions","View","Qrcode","WalletConnectLogo","WalletServiceRow","styles","create","absolute","position","black","backgroundColor","center","alignItems","justifyContent","flex","fullWidth","width","noOverflow","overflow","row","flexDirection","useNativeDriver","OS","QrcodeModal","visible","walletServices","connectToWalletService","uri","onDismiss","division","shouldConnectToWalletService","useCallback","walletService","height","opacity","logo","icons","useMemo","Value","walletServiceRows","Array","Math","ceil","length","map","_","i","slice","modalHeight","modalWidth","shouldAnimate","totalDuration","direction","sequence","timing","toValue","duration","delay","parallel","reverse","start","useEffect","onPressLogo","url","canOpenURL","openURL","keyExtractor","walletServiceRow","indexOf","renderItem","item","index","createElement","key","style","shouldRenderQrcode","pointerEvents","absoluteFill","onPress","activeOpacity","multiply","transform","translateY","scale","add","size","scrollEnabled","showsVerticalScrollIndicator","data"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, FlatList, Linking, Platform, StyleSheet, TouchableOpacity, useWindowDimensions, View, } from 'react-native';\nimport Qrcode from './Qrcode';\nimport WalletConnectLogo from './WalletConnectLogo';\nimport WalletServiceRow from './WalletServiceRow';\nconst styles = StyleSheet.create({\n    absolute: { position: 'absolute' },\n    black: { backgroundColor: 'black' },\n    center: { alignItems: 'center', justifyContent: 'center' },\n    flex: { flex: 1 },\n    fullWidth: { width: '100%' },\n    noOverflow: { overflow: 'hidden' },\n    row: { alignItems: 'center', flexDirection: 'row' },\n});\nconst useNativeDriver = Platform.OS !== 'web';\nexport default function QrcodeModal({ visible, walletServices, connectToWalletService, uri, onDismiss, division, }) {\n    const shouldConnectToWalletService = React.useCallback((walletService) => connectToWalletService(walletService, uri), [connectToWalletService, uri]);\n    const { width, height } = useWindowDimensions();\n    const { opacity, logo, icons } = React.useMemo(() => ({\n        opacity: new Animated.Value(0),\n        logo: new Animated.Value(0),\n        icons: new Animated.Value(0),\n    }), []);\n    const walletServiceRows = React.useMemo(() => {\n        return [...Array(Math.ceil(walletServices.length / division))]\n            .map((_, i) => walletServices.slice(i * division, i * division + division));\n    }, [walletServices, division]);\n    const modalHeight = height * 0.4;\n    const modalWidth = modalHeight * 0.9;\n    const shouldAnimate = React.useCallback((totalDuration, direction) => {\n        const sequence = [\n            Animated.timing(opacity, {\n                toValue: direction ? 1 : 0,\n                duration: totalDuration * 0.5,\n                useNativeDriver,\n            }),\n            Animated.delay(direction ? 0 : totalDuration * 0.4),\n            Animated.parallel([\n                Animated.sequence([\n                    Animated.delay(totalDuration * (direction ? 0.2 : 0)),\n                    Animated.timing(icons, {\n                        toValue: direction ? 1 : 0,\n                        duration: totalDuration * (direction ? 0.3 : 0.5),\n                        useNativeDriver,\n                    }),\n                ]),\n                Animated.timing(logo, {\n                    toValue: direction ? 1 : 0,\n                    duration: totalDuration * 0.5,\n                    useNativeDriver,\n                }),\n            ]),\n        ];\n        if (!direction) {\n            sequence.reverse();\n        }\n        Animated.sequence(sequence).start();\n    }, [opacity, logo, icons, division]);\n    React.useEffect(() => {\n        shouldAnimate(visible ? 600 : 600, visible);\n    }, [shouldAnimate, visible]);\n    const onPressLogo = React.useCallback(async () => {\n        const url = 'https://walletconnect.org/';\n        return (await Linking.canOpenURL(url)) && Linking.openURL(url);\n    }, []);\n    const keyExtractor = React.useCallback((walletServiceRow) => {\n        return `k${walletServiceRows.indexOf(walletServiceRow)}`;\n    }, [walletServiceRows]);\n    const renderItem = React.useCallback(({ item, index }) => {\n        return (React.createElement(WalletServiceRow, { key: `k${index}`, style: { opacity: icons }, division: division, walletServices: item, width: modalWidth, height: modalHeight * 0.25, connectToWalletService: shouldConnectToWalletService }));\n    }, [modalWidth, modalHeight, division, icons, shouldConnectToWalletService]);\n    const shouldRenderQrcode = Platform.OS === 'web';\n    return (React.createElement(Animated.View, { style: [\n            styles.absolute,\n            styles.noOverflow,\n            {\n                width,\n                height,\n                opacity,\n            },\n        ], pointerEvents: visible ? 'box-none' : 'none' },\n        React.createElement(View, { style: StyleSheet.absoluteFill },\n            React.createElement(TouchableOpacity, { style: StyleSheet.absoluteFill, onPress: onDismiss, activeOpacity: 0.98 },\n                React.createElement(Animated.View, { style: [styles.flex, { opacity: Animated.multiply(opacity, 0.95) }, styles.black] }))),\n        React.createElement(View, { style: [StyleSheet.absoluteFill, styles.center], pointerEvents: \"box-none\" },\n            React.createElement(Animated.View, { pointerEvents: visible ? 'box-none' : 'none', style: {\n                    width: modalWidth,\n                    transform: [\n                        { translateY: Animated.multiply(modalHeight * (shouldRenderQrcode ? 0.5 : 0.6), logo) },\n                        { scale: Animated.add(1, Animated.multiply(logo, -0.2)) },\n                    ],\n                } },\n                React.createElement(TouchableOpacity, { onPress: onPressLogo },\n                    React.createElement(WalletConnectLogo, { width: modalWidth })))),\n        React.createElement(View, { style: [StyleSheet.absoluteFill, styles.center], pointerEvents: visible ? 'box-none' : 'none' },\n            React.createElement(Animated.View, { style: { width: modalWidth, height: modalHeight } }, shouldRenderQrcode ? (React.createElement(Animated.View, { style: [\n                    StyleSheet.absoluteFill,\n                    styles.center,\n                    { opacity: icons, transform: [{ scale: icons }] },\n                ] },\n                React.createElement(Qrcode, { uri: uri, size: modalHeight * 0.8 }))) : (React.createElement(FlatList, { scrollEnabled: visible, showsVerticalScrollIndicator: visible, keyExtractor: keyExtractor, style: styles.flex, data: walletServiceRows, renderItem: renderItem }))))));\n}\n"]},"metadata":{},"sourceType":"module"}